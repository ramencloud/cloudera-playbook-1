# https://www.cloudera.com/documentation/enterprise/latest/topics/install_cluster_template.html
- name: Prepare cluster template
  template:
    src: "base.j2"
    dest: "{{ tmp_dir }}/cluster.json"
  when: cluster_exists == False
  delegate_to: localhost

# https://cloudera.github.io/cm_api/apidocs/v13/path__cm_importClusterTemplate.html
- name: Import cluster template
  uri:
    url: "{{ cm_api_url }}/cm/importClusterTemplate?addRepositories=true"
    method: POST
    body_format: json
    body: "{{ lookup('file', ''+ tmp_dir + '/cluster.json') }}"
    status_code: 200
    force_basic_auth: yes
    user: "{{ scm_default_user }}"
    password: "{{ scm_default_pass }}"
    return_content: yes
  register: template_resp
  when: cluster_exists == False
  delegate_to: localhost

- debug: var=template_resp
  when: cluster_exists == False

- set_fact: _cluster_import_command_id="{{ template_resp.json.id }}"
  when: cluster_exists == False

- name: wait for cluster import to finish
  uri:
    url: "{{ cm_api_url }}/commands/{{ _cluster_import_command_id }}"
    force_basic_auth: yes
    user: "{{ scm_default_user }}"
    password: "{{ scm_default_pass }}"
    return_content: yes
  register: cluster_import_command_status_resp
  until: not cluster_import_command_status_resp.json.active
  retries: 360
  delay: 10
  when: cluster_exists == False

- assert:
    that: "cluster_import_command_status_resp.json.success"
    msg: "Cluster import command failed"
  when: cluster_exists == False

- file:
    path: "{{ tmp_dir }}/cluster.json"
    state: absent
  delegate_to: localhost
